
/multiple file upload/

function saveknowledgefiles(that) {
   var fd =  new FormData(that.find('form')[0]);

    fd.append('issue_id', that.find('input[type="hidden"]').val());
    $.ajax({
        url: '/customer-knowledgebase/',
        data: fd,
        processData: false,
        contentType: false,
        type: 'POST',
        beforeSend: function(xhr) {
            xhr.setRequestHeader('X-CSRFToken', csrftoken)
        },

        success: function(data) {
        $.each( data.files, function( key, value ) {
               $(that.find('h6')).empty();
               $(that.append('<h6><a  onclick="window.open('+'\'/'+"media/"+value['path']+'\')">'+value['name']+'</a></h6>'))
         });

        },
        error: function(error) {
            console.log("Error", error);
        }
    });

}
//
def detect_text(path):
    """Detects text in the file."""
    client = vision.ImageAnnotatorClient()

    with io.open(path, 'rb') as image_file:
        content = image_file.read()

    image = types.Image(content=content)

    response = client.text_detection(image=image)
    texts = response.text_annotations
    print('Texts:')

    for text in texts:
        print('\n"{}"'.format(text.description))

        vertices = (['({},{})'.format(vertex.x, vertex.y)
                    for vertex in text.bounding_poly.vertices])

        print('bounds: {}'.format(','.join(vertices)))